# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'GeoContextQGISPlugin_options_dialog_base.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


import os

from PyQt5.QtWidgets import QDialog
from qgis.PyQt import uic
from qgis.core import QgsSettings

# Import the PyQt and QGIS libraries
# this import required to enable PyQt API v2
# do it before Qt imports

FORM_CLASS, _ = uic.loadUiType(os.path.join(
    os.path.dirname(__file__), 'GeoContextQGISPlugin_options_dialog_base.ui'))


class OptionsDialog(QDialog, FORM_CLASS):
    def __init__(self, parent=None):
        """Constructor."""
        super(OptionsDialog, self).__init__(parent)
        # Set up the user interface from Designer.
        # After setupUI you can access any designer object by doing
        # self.<objectname>, and you can use autoconnect slots - see
        # http://qt-project.org/doc/qt-4.8/designer-using-a-ui-file.html
        # #widgets-and-dialogs-with-auto-connect
        QDialog.__init__(self, parent)
        self.setupUi(self)

        # Sets the options according what the user has it previously set/saved using the options dialog
        settings = QgsSettings()

        # API configuration
        self.lineUrl.setValue(settings.value('geocontext-qgis-plugin/url', '', type=str))
        self.lineSchema.setValue(settings.value('geocontext-qgis-plugin/schema', '', type=str))

        # Panel settings
        self.checkAutoClear.setChecked(settings.value('geocontext-qgis-plugin/auto_clear_table', False, type=bool))
        self.sldDecPlacesPanel.setValue(settings.value('geocontext-qgis-plugin/dec_places_panel', 3, type=int))
        self.lblDecPlacePanel.setText(str(self.sldDecPlacesPanel.value()))

        # Processing tool settings
        self.sldDecPlacesTool.setValue(settings.value('geocontext-qgis-plugin/dec_places_tool', 3, type=int))
        self.lblDecPlaceTool.setText(str(self.sldDecPlacesTool.value()))

        self.sldDecPlacesPanel.valueChanged.connect(self.dec_places_value_changed_panel)
        self.sldDecPlacesTool.valueChanged.connect(self.dec_places_value_changed_tool)

    def dec_places_value_changed_panel(self):
        """This method is called when the user moves the decimal place slider for the panel.
        """

        self.lblDecPlacePanel.setText(str(self.sldDecPlacesPanel.value()))

    def dec_places_value_changed_tool(self):
        """This method is called when the user moves the decimal place slider for the processing tool.
        """

        self.lblDecPlaceTool.setText(str(self.sldDecPlacesTool.value()))

    def set_url(self):
        """Sets the base URL which will be used to request data/values.
        This can be set using this dialog.
        """

        settings = QgsSettings()
        url = self.lineUrl.value()

        settings.setValue('geocontext-qgis-plugin/url', url)

    def set_schema(self):
        """Sets the schema docs provided by the user. This can be set using
        this dialog
        """

        settings = QgsSettings()
        schema = self.lineSchema.value()

        settings.setValue('geocontext-qgis-plugin/schema', schema)

    def set_auto_clear(self):
        """Sets whether the panel table should be cleared when the user clicks in the canvas. This can be set using
        this dialog
        """

        settings = QgsSettings()
        auto_clear = self.checkAutoClear.checkState()

        settings.setValue('geocontext-qgis-plugin/auto_clear_table', auto_clear)

    def set_dec_places_panel(self):
        """Sets the decimal places for the panel value requests. This can be set using
        this dialog
        """

        settings = QgsSettings()
        tick_pos = self.sldDecPlacesPanel.value()

        settings.setValue('geocontext-qgis-plugin/dec_places_panel', tick_pos)

    def set_dec_places_tool(self):
        """Sets the decimal places for the tool value requests. This can be set using
        this dialog
        """

        settings = QgsSettings()
        tick_pos = self.sldDecPlacesTool.value()

        settings.setValue('geocontext-qgis-plugin/dec_places_tool', tick_pos)
