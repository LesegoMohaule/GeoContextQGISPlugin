# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'GeoContextQGISPlugin_options_dialog_base.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


import os

from PyQt5.QtWidgets import QDialog
from qgis.PyQt import uic
from qgis.PyQt.QtCore import QSettings
from qgis.core import QgsSettings

# Import the PyQt and QGIS libraries
# this import required to enable PyQt API v2
# do it before Qt imports

FORM_CLASS, _ = uic.loadUiType(os.path.join(
    os.path.dirname(__file__), 'GeoContextQGISPlugin_options_dialog_base.ui'))


class OptionsDialog(QDialog, FORM_CLASS):
    def __init__(self, parent=None):
        """Constructor."""
        super(OptionsDialog, self).__init__(parent)
        # Set up the user interface from Designer.
        # After setupUI you can access any designer object by doing
        # self.<objectname>, and you can use autoconnect slots - see
        # http://qt-project.org/doc/qt-4.8/designer-using-a-ui-file.html
        # #widgets-and-dialogs-with-auto-connect
        QDialog.__init__(self, parent)
        self.setupUi(self)

        # Sets the options according what the user has it previously set/saved using the options dialog
        settings = QgsSettings()
        self.lineUrl.setValue(settings.value('geocontext-qgis-plugin/url', '', type=str))
        self.lineSchema.setValue(settings.value('geocontext-qgis-plugin/schema', '', type=str))
        self.checkAutoClear.setChecked(settings.value('geocontext-qgis-plugin/auto_clear_table', False, type=bool))

    def get_schema(self):
        """Gets the already-set schema URL. This is set using this
        dialog

        :returns: A URL for the docs used to retrieve the schema
        :rtype: String
        """

        url = self.lineUrl.value()
        return url

    def get_url(self):
        """Gets the base URL on which requests will be performed. This is set
        by this dialog

        :returns: A vector point layer that contains nodes as attributes.
        :rtype: QgsVectorLayer
        """

        schema = self.lineSchema.value()
        return schema

    def set_url(self):
        """Sets the base URL which will be used to request data/values.
        This can be set using this dialog.
        """

        settings = QgsSettings()
        url = self.lineUrl.value()

        settings.setValue('geocontext-qgis-plugin/url', url)

    def set_schema(self):
        """Sets the schema docs provided by the user. This can be set using
        this dialog
        """

        settings = QgsSettings()
        schema = self.lineSchema.value()

        settings.setValue('geocontext-qgis-plugin/schema', schema)

    def set_auto_clear(self):
        """Gets the base URL on which requests will be performed. This is set
        by this dialog

        :returns: A vector point layer that contains nodes as attributes.
        :rtype: QgsVectorLayer
        """

        settings = QgsSettings()
        auto_clear = self.checkAutoClear.checkState()

        settings.setValue('geocontext-qgis-plugin/auto_clear_table', auto_clear)
